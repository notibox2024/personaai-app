name: personaai-infra

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17
    container_name: personaai-postgres
    environment:
      POSTGRES_DB: personaai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: personaai,keycloak
      # Performance optimizations
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - personaai-network
    # Optimize resource usage
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    # Improved health check
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d personaai"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: personaai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - personaai-network
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Keycloak Identity and Access Management
  keycloak:
    build:
      context: .
      dockerfile: Dockerfile.keycloak
    image: personaai-keycloak:26.2
    container_name: personaai-keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_LOG_LEVEL: info
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      # Performance optimizations
      KC_CACHE: ispn
      KC_CACHE_STACK: tcp
      JAVA_OPTS: "-Xms256m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m"
    ports:
      - "8080:8080"  # Main Keycloak port
      - "9000:9000"  # Management/Health check port
    networks:
      - personaai-network
    depends_on:
      postgres:
        condition: service_healthy
    command: start-dev
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 384M
    # Health check using curl (available in custom image)
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/health/ready || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 6
      start_period: 45s

  # PostgREST API
  postgrest:
    image: postgrest/postgrest:v13.0.4
    container_name: personaai-postgrest
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@postgres:5432/personaai
      PGRST_DB_SCHEMAS: public,api
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_DB_POOL: 10
      PGRST_DB_POOL_ACQUISITION_TIMEOUT: 10
      PGRST_JWT_SECRET: "@/etc/postgrest/jwks.json"
      PGRST_SERVER_HOST: 0.0.0.0
      PGRST_SERVER_PORT: 3000
      PGRST_OPENAPI_MODE: ignore-privileges
      PGRST_OPENAPI_SECURITY_ACTIVE: true
    ports:
      - "3300:3000"
    volumes:
      - ./jwks.json:/etc/postgrest/jwks.json
    networks:
      - personaai-network
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    # Improved health check
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3300/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  personaai-network:
    driver: bridge