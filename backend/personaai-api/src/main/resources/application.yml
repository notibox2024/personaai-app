server:
  port: 8097
  servlet:
    context-path: /personaai-portal

spring:
  application:
    name: personaai-api
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:api}
  
  # Import config từ core
  config:
    import:
      - classpath:application-core.yml
  
  # Jackson Configuration for JSON serialization
  jackson:
    serialization:
      write-dates-as-timestamps: false  # Sử dụng ISO format thay vì array
      write-date-timestamps-as-nanoseconds: false
    deserialization:
      read-date-timestamps-as-nanoseconds: false
    date-format: "yyyy-MM-dd'T'HH:mm:ss.SSS"
    time-zone: "Asia/Ho_Chi_Minh"
  
  # OAuth2 Resource Server Configuration với Keycloak
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8180/realms/paperless}
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:http://localhost:8180/realms/paperless/protocol/openid-connect/certs}
      client:
        registration:
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID:paperless-api}
            client-secret: ${KEYCLOAK_CLIENT_SECRET:}
            scope: openid,profile,email
            authorization-grant-type: authorization_code
            redirect-uri: ${KEYCLOAK_REDIRECT_URI:http://localhost:8088/api/login/oauth2/code/keycloak}
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8180/realms/paperless}
            user-name-attribute: preferred_username

# Management và Actuator cho API layer
management:
  # Actuator Endpoints Configuration
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINTS:health,info,metrics,prometheus}
      base-path: ${ACTUATOR_BASE_PATH:/actuator}
  endpoint:
    health:
      show-details: ${HEALTH_SHOW_DETAILS:always}
    metrics:
      enabled: ${METRICS_ENABLED:true}
    prometheus:
      enabled: ${PROMETHEUS_ENABLED:true}
    info:
      enabled: ${INFO_ENABLED:true}
  
  # Metrics cho API layer
  metrics:
    use-global-registry: ${METRICS_USE_GLOBAL_REGISTRY:true}
    tags:
      application: personaai-api
      layer: api-layer
      environment: ${ENVIRONMENT:development}
    export:
      prometheus:
        enabled: ${PROMETHEUS_EXPORT_ENABLED:true}
  
  # Tracing config và OTLP export cho toàn bộ application
  tracing:
    sampling:
      probability: ${TRACING_SAMPLING_PROBABILITY:1.0}
  
  # OTLP Export - chỉ API layer export traces từ cả core và api
  otlp:
    tracing:
      export:
        endpoint: ${OTLP_TRACING_ENDPOINT:http://localhost:4318/v1/traces}  # Jaeger OTLP HTTP endpoint
    metrics:
      export:
        enabled: ${OTLP_METRICS_ENABLED:false}  # Disable to avoid connection errors if no receiver
        # url: ${OTLP_METRICS_ENDPOINT:http://localhost:4318/v1/metrics}
    logging:
      enabled: ${OTLP_LOGGING_ENABLED:false}  # Disable OTLP logging export
      # endpoint: ${OTLP_LOGGING_ENDPOINT:http://localhost:4318/v1/logs}

# API Documentation
springdoc:
  api-docs:
    path: ${API_DOCS_PATH:/api-docs}
  swagger-ui:
    path: ${SWAGGER_UI_PATH:/swagger-ui.html}
    tags-sorter: ${SWAGGER_TAGS_SORTER:alpha}
    operations-sorter: ${SWAGGER_OPERATIONS_SORTER:alpha}

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
  allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
  allowed-headers: ${CORS_ALLOWED_HEADERS:*}
  allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}

# Logging cho API layer
logging:
  level:
    com.kienlongbank.personaai.portal.api: ${LOG_LEVEL_API:DEBUG}
    org.springframework.web: ${LOG_LEVEL_WEB:INFO}
    org.springframework.security: ${LOG_LEVEL_SECURITY:DEBUG}
    root: ${LOG_LEVEL_ROOT:INFO} 