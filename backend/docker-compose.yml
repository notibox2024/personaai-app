version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17
    container_name: personaai-postgres
    environment:
      POSTGRES_DB: personaai_portal
      POSTGRES_USER: personaai
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - personaai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U personaai -d personaai_portal"]
      timeout: 20s
      retries: 10

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: personaai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - personaai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5

  # PersonaAI API Application
  personaai-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: personaai-api
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_USERNAME: personaai
      DB_PASSWORD: password
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/personaai_portal
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - personaai-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/personaai-portal/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  personaai-network:
    driver: bridge